set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${SCALAPACK_BINARY_DIR}/TESTING)

foreach(prec s d c z)
    if(BUILD_PRECISION MATCHES [${prec}])
        set (matgen p${prec}matgen.f pmatgeninc.f)
        set (linchk p${prec}laschk.f p${prec}lafchk.f)
        add_executable(x${prec}lu p${prec}ludriver.f p${prec}luinfo.f p${prec}getrrv.f ${matgen} ${linchk})
        add_executable(x${prec}dblu p${prec}dbdriver.f p${prec}dbinfo.f p${prec}dblaschk.f p${prec}dbmv1.f p${prec}bmatgen.f ${matgen})
        add_executable(x${prec}dtlu p${prec}dtdriver.f p${prec}dtinfo.f p${prec}dtlaschk.f p${prec}dbmv1.f p${prec}bmatgen.f ${matgen})
        add_executable(x${prec}gblu p${prec}gbdriver.f p${prec}gbinfo.f p${prec}dblaschk.f p${prec}gbmv1.f p${prec}bmatgen.f ${matgen})
        add_executable(x${prec}llt p${prec}lltdriver.f p${prec}lltinfo.f p${prec}potrrv.f ${matgen} ${linchk})
        add_executable(x${prec}pbllt p${prec}pbdriver.f p${prec}pbinfo.f p${prec}pblaschk.f p${prec}pbmv1.f p${prec}bmatgen.f ${matgen})
        add_executable(x${prec}ptllt p${prec}ptdriver.f p${prec}ptinfo.f p${prec}ptlaschk.f p${prec}pbmv1.f p${prec}bmatgen.f ${matgen})
        add_executable(x${prec}inv p${prec}invdriver.f p${prec}invinfo.f p${prec}invchk.f ${matgen})
        add_executable(x${prec}qr p${prec}qrdriver.f p${prec}qrinfo.f p${prec}geqrrv.f p${prec}geqlrv.f p${prec}gelqrv.f p${prec}gerqrv.f p${prec}tzrzrv.f p${prec}lafchk.f ${matgen})
        add_executable(x${prec}ls p${prec}lsdriver.f p${prec}lsinfo.f p${prec}qrt13.f p${prec}qrt14.f p${prec}qrt16.f p${prec}qrt17.f ${matgen})
        target_link_libraries(x${prec}lu scalapack)
        target_link_libraries(x${prec}dblu scalapack)
        target_link_libraries(x${prec}dtlu scalapack)
        target_link_libraries(x${prec}gblu scalapack)
        target_link_libraries(x${prec}llt scalapack)
        target_link_libraries(x${prec}pbllt scalapack)
        target_link_libraries(x${prec}ptllt scalapack)
        target_link_libraries(x${prec}inv scalapack)
        target_link_libraries(x${prec}qr scalapack)
        target_link_libraries(x${prec}ls scalapack)
    endif()
endforeach()

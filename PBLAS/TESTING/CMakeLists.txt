add_library(pbtcom_c_tst PB_Cwarn.c PB_Cabort.c)
target_compile_definitions(pbtcom_c_tst PRIVATE TestingPblas)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${SCALAPACK_BINARY_DIR}/PBLAS/TESTING)

foreach(prec s d c z)
    if(BUILD_PRECISION MATCHES [${prec}])
        set(common p${prec}blastst.f pblastst.f)
        if (EXISTS ${prec}lamch.f)
            list(APPEND common ${prec}lamch.f)
        endif()
        string(TOUPPER ${prec} PREC)
        file(COPY P${PREC}BLAS1TST.dat DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
        file(COPY P${PREC}BLAS2TST.dat DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
        file(COPY P${PREC}BLAS3TST.dat DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
        add_executable(${prec}pb1tst p${prec}blas1tst.f ${common})
        add_executable(${prec}pb2tst p${prec}blas2tst.f ${common})
        add_executable(${prec}pb3tst p${prec}blas3tst.f ${common})
        target_link_libraries(${prec}pb1tst scalapack lapack blas pbtcom_c_tst ${MPI_Fortran_LIBRARIES})
        target_link_libraries(${prec}pb2tst scalapack lapack blas pbtcom_c_tst ${MPI_Fortran_LIBRARIES})
        target_link_libraries(${prec}pb3tst scalapack lapack blas pbtcom_c_tst ${MPI_Fortran_LIBRARIES})
        add_test(${prec}pb1tst ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} 4 ./${prec}pb1tst)
        add_test(${prec}pb2tst ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} 4 ./${prec}pb2tst)
        add_test(${prec}pb3tst ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} 4 ./${prec}pb3tst)
    endif()
endforeach()